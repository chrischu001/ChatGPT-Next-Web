name: Sync Fork and Build Docker Image

on:
  schedule:
    - cron: '0 0 * * 0'  # 每周日午夜运行
  workflow_dispatch:     # 允许手动触发

jobs:
  sync-and-build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Configure Git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
      
      - name: Add upstream remote
        run: |
          git remote add upstream https://github.com/QAbot-zh/ChatGPT-Next-Web.git
          git remote -v
      
      - name: Fetch from upstream
        run: |
          git fetch upstream
      
      - name: Merge upstream changes
        run: |
          git merge upstream/main -m "Merge upstream changes"
          git push origin main
        continue-on-error: true
      
      - name: Apply custom styles
        run: |
          # 创建新的样式文件
          cat > app/styles/custom_globals.scss << 'EOF'
          @import "./animation.scss";
          @import "./window.scss";

          @mixin light {
            --theme: light;
            --white: #fff;
            --black: #303030;
            --gray: #fafafa;
            --primary: #315ef8;
            --second: #f3f3f6;
            --hover-color: #f3f3f3;
            --bar-color: rgba(0,0,0,.1);
            --theme-color: var(--gray);
            --shadow: 50px 50px 100px 10px rgba(0,0,0,.1);
            --card-shadow: 0px 2px 4px 0px rgba(0,0,0,.05);
            --border-in-light: 1px solid #dedede;
            --sidebar-sub-title: rgba(38,47,156,.5);
          }

          @mixin dark {
            --theme: dark;
            --white: #1e1e1e;
            --black: #bbb;
            --gray: #151515;
            --primary: #315ef8;
            --second: #26262c;
            --hover-color: #323232;
            --bar-color: rgba(255, 255, 255, 0.1);
            --border-in-light: 1px solid rgba(255, 255, 255, 0.192);
            --theme-color: var(--gray);

            div:not(.no-dark) > svg {
              filter: invert(0.5);
            }
          }
          .home_container{margin:auto} 
          .light {
            @include light;
          }

          .dark {
            @include dark;
          }

          .mask {
            filter: invert(0.8);
          }

          :root {
            @include light;

            --window-width: 90vw;
            --window-height: 90vh;
            --sidebar-width: 300px;
            --window-content-width: calc(100% - var(--sidebar-width));
            --message-max-width: 80%;
            --full-height: 100%;
          }

          @media only screen and (max-width: 600px) {
            :root {
              --window-width: 100vw;
              --window-height: var(--full-height);
              --sidebar-width: 100vw;
              --window-content-width: var(--window-width);
              --message-max-width: 100%;
            }

            .no-mobile {
              display: none;
            }
          }

          @media (prefers-color-scheme: dark) {
            :root {
              @include dark;
            }
          }
          EOF

          # 将原始样式的其余部分附加到新样式
          sed -n '/html {/,$p' app/styles/globals.scss >> app/styles/custom_globals.scss
          
          # 替换原始样式文件
          cp app/styles/custom_globals.scss app/styles/globals.scss
          
          # 修改标题和副标题
          sed -i 's/NextChat/NieAI Chat/g' app/components/sidebar.tsx
          sed -i 's/Build your own AI assistant./Quickly start your AI journey./g' app/components/sidebar.tsx
          
          # 创建自定义图标目录
          mkdir -p .github/assets
      
      - name: Create custom logo
        run: |
          # 将你的自定义logo放在仓库的.github/assets目录下
          # 这里我们假设已经有了这个文件，如果没有，你需要创建它
          cp .github/assets/chatgpt.svg app/icons/chatgpt.svg
        continue-on-error: true
      
      - name: Commit changes
        run: |
          git add .
          git commit -m "Apply custom styles and branding" || echo "No changes to commit"
          git push origin main
        continue-on-error: true
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=raw,value=latest
            type=sha,format=short
            type=schedule,pattern={{date 'YYYYMMDD'}}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: .github/workflows/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
